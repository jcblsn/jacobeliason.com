{
  "hash": "9f34338232517b56ca5859d059da3fce",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"How I'm Storing Files\"\ndescription: \"Notes on transitioning to a NAS for personal file storage and backup\"\ncategories: [\"servers\"]\nauthor: \"Jacob Eliason\"\ndate: \"2024-08-02\"\ndraft: false\n---\n\nThis post serves as documentation of my current NAS setup. As usual, it primarily serves as personal documentation. I'll update it as my system evolves or if I encounter and resolve new issues.\n\n![](storage-unsplash.jpg)\n\n## Why a NAS\n\nMy previous solution for file storage involved external hard drives, Dropbox, and my computer's hard drive. This setup was fragmented, making file access difficult and leaving data unversioned and not properly backed up.\nI have approximately one terabyte of photos from my digital camera and film scans, plus iPhone photos from the last decade. I also maintain a copy of my family's photos, adding another terabyte. This amount is too large to store on my personal computer, and I wanted some access to these files without relying on cloud downloads.\n\nCloud storage solutions caused some unease, as I couldn't fully account for my files or ensure their integrity. I disliked the idea of an internet account being a single point of failure for my most valuable digital possessions.\n\nMy personal computer's hard drive was filled with datasets and code assets. I wanted a Dropbox-style ability to offload from local storage when not in use.\n\nA NAS allows me to consolidate what was previously spread across my computer's hard drive, Dropbox, and two external hard drives into one place. For files previously stored only on external hard drives, it reduces the worry about drive failure.\n\nAdditional benefits include:\n\n* More precise control over backup and storage for files that require or don't require an additional copy\n* Versioning\n* Potential long-term cost savings\n\n## Setup\n\n### Hardware\n\nI chose the [Synology DS224+](https://www.synology.com/en-us/products/DS224+) with two 8-terabyte drives.\n\n### Backup\nI implemented a multi-tiered backup strategy:\n\n1. [Hyper Backup](https://www.synology.com/en-global/dsm/feature/hyper_backup) to [Synology C2](https://c2.synology.com/en-us)\n2. Hyper Backup to an external drive (though I'm considering switching to Cloud Sync to have a full backup available as a regular file structure)\n3. [Snapshots](https://www.synology.com/en-global/dsm/feature/snapshot_replication)\n\nSynology's C2 allows file browsing from the Mac Hyper Backup client app without needing a Synology device. Pricing is similar to alternatives, with the main difference being whole TB increments versus continuous rate pricing.\n\nSnapshots are lightweight operations that can run frequently without causing issues. They offer a sophisticated retention schedule and a legible file structure.\n\nIn this setup, Hyper Backup provides long-term protection, while snapshots offer short-term protection.\n\n### Transfer\n\nAfter some frustrating trial and error, I set a large external hard drive as the root directory for my Dropbox Mac client's backup in order to download my cloud storage files without harming their metadata. I then connected the drive to the NAS and used the following from my personal computer to copy files from the drive to the destination file system:\n\n\n```{bash}\n#| eval: false\nnohup caffeinate -s rsync -avz --progress --checksum --partial --delete --stats --human-readable --log-file=~/rsync_log.txt \"/source\" \"/target\" &\n```\n\nThe `caffeinate` command prevents my Mac from sleeping during the transfer.\n\nTo safely move files from my Mac to the NAS, I used the following script, co-authored with Claude:\n\n\n```{bash}\n#| eval: false\n#!/bin/bash\n\nRSYNC=\"/opt/homebrew/bin/rsync\"\n\nPAIRS_FILE=\"pairs.txt\"\nLOG_FILE=\"rsync_log.txt\"\n\n# use Homebrew-installed rsync (required for created date compatibility)\nRSYNC_VERSION=$($RSYNC --version | grep version | awk '{ print $3 }')\nREQUIRED_VERSION=\"3.1.0\"\n\nif [[ $(echo -e \"$RSYNC_VERSION\\n$REQUIRED_VERSION\" | sort -V | head -n1) != \"$REQUIRED_VERSION\" ]]; then\n  echo \"Your rsync version $RSYNC_VERSION is less than the required $REQUIRED_VERSION\"\n  echo \"Please upgrade rsync using Homebrew: brew install rsync\"\n  exit 1\nfi\n\n# check if the pairs file exists\nif [ ! -f \"$PAIRS_FILE\" ]; then\n    echo \"Error: Pairs file does not exist.\"\n    exit 1\nfi\n\n# read each line from the pairs file\nwhile IFS= read -r line\ndo\n    # split the line into source and destination\n    read -ra ADDR <<< \"$line\"\n    SOURCE=\"${ADDR[0]}\"\n    DESTINATION=\"${ADDR[1]}\"\n\n    # check if source and destination are provided\n    if [ -z \"$SOURCE\" ] || [ -z \"$DESTINATION\" ]; then\n        echo \"Skipping invalid line: $line\"\n        continue\n    fi\n\n    echo \"Starting rsync from $SOURCE to $DESTINATION\"\n    \n    # perform sync\n    $RSYNC -avhP --delete --crtimes --times --log-file=$LOG_FILE \"$SOURCE\" \"$DESTINATION\"\n\n    echo \"Completed rsync for $SOURCE to $DESTINATION\"\ndone < \"$PAIRS_FILE\"\n\necho \"All operations completed. Check $LOG_FILE for details.\"\n```\n\n\nBecause I was setting up a new directory structure, I used a file containing pairs of one source and one destination directory at a time to copy files over. \n\n<!-- ### Configuration -->\n\n## File Sharing\n\nI use Synology Drive's Mac client, which functions pretty similarly to Dropbox's Mac client. This has made it easier to move all my MacBook work into the NAS and to archive or offload large projects once completed.\n\n## Alternatives Considered\n\n* Cloud sync with Dropbox: I tested this but found issues with slow propagation from Dropbox to NAS and metadata inconsistencies.\n* Building a custom NAS with a Raspberry Pi: While cheaper, I prioritized reliability and chose Synology as a more supported solution.\n* Cloud-only storage: I subjectively prefer having at least one local copy of my files.\n* Local copy at home backed up to a PC at another location: This seemed too labor-intensive.\n\n## Additional Use Cases\n\n### Zotero\n\nThanks to [this post](https://www.reddit.com/r/zotero/comments/15b5kay/tutorial_for_synology_nas_storage/), I figured out how to store all PDF files on the Synology, share using WebDAV, connect using [Tailscale](https://tailscale.com/), and access using [Zotero](https://www.zotero.org/) on any device. This provides unlimited storage and sync for my personal library.\n\n### Time Machine\nI set up a shared folder on the NAS for Time Machine backups, which run automatically when I'm on the network.\n\n### Photos\nFor Apple Photos, I unchecked \"Copy items to the Photos library\" in Preferences > General to keep photos on the NAS.\n\n### File System\nI'm using the [Johnny Decimal system](https://johnnydecimal.com/) for file organization.\n\n## To Do\n\nCreate additional shared folders to host backups for other devices and family members' data.\n\n## Troubleshooting Notes\n\nFor slow SMB connections to NAS from Mac Finder:\n\n* Navigate to DSM > Control Panel > File Services > SMB Settings > Advanced Settings\n* Clear SMB Cache\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}