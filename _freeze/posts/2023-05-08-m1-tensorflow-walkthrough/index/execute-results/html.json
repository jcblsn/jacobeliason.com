{
  "hash": "3b0ade5d7de2dd0098e697ac2c853405",
  "result": {
    "markdown": "---\ntitle: \"Setting up Tensorflow with GPU support on a M1 Macbook Pro\"\ndescription: ''\ncategories: [deep learning, process write-up]\nauthor: \"Jacob Eliason\"\ndate: \"2023-05-08\"\ndraft: false\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\nAs has been [observed](https://twitter.com/williamrblack/status/1429962733055881218?s=20) [elsewhere](https://twitter.com/MLE_Online/status/1584794484134805504?s=20), Google search results seem to have meaningfully degraded in quality in the last couple of years. Whether this is due to AI content farms or more widespread SEO-gaming, I sometimes find myself searching through what feels like ever-larger haystacks for increasingly well-disguised needles.\n\nThis was especially true for me last fall after I upgraded my laptop to a M1 Macbook Pro. Setting up a Python environment for Tensorflow with GPU support was surprisingly hard to do despite no shortage of helpful-sounding search results. As documented [here](https://stackoverflow.com/a/75198379) this seems like it can be a deceptively tricky process. After getting things up and running and subsequently having walked through the process a couple of additional times with classmates, I thought I'd write down the steps that worked with my machine.\n\n## 1. Install miniforge or miniconda\n\nI don't remember whether or why this would matter, but I think I had issues when I tried with Anaconda. I used miniconda.\n\n## 2. Create a `osx-arm64`-native Conda environment\n\nPer this Stack Overflow [answer](https://stackoverflow.com/a/65432861), we'll create a new Conda environment with the `osx-arm64` channel as the default. This will ensure that any packages we install will be the M1-native versions.\n\n```{{bash}}\nCONDA_SUBDIR=osx-arm64 conda create -n native numpy -c conda-forge\nconda activate native \nconda config --env --set subdir osx-arm64\n```\n\nSubsequent steps come from \"Fix #2\" in the following [answer](https://stackoverflow.com/a/75198379).\n\n## 3. Require the use of the conda-forge channel\n\n```{{bash}}\nconda config --add channels conda-forge\nconda config --set channel_priority strict \n```\n## 4. Install `tensorflow-deps==2.10.0` from the `apple` channel\n\n```{{bash}}\nconda install -y -c apple tensorflow-deps==2.10.0\n```\n\n## 5. Install `tensorflow-macos==2.10.0` and `tensorflow-metal==0.6.0` from PyPI\n\n```{{bash}}\npython -m pip install tensorflow-macos==2.10.0\npython -m pip install tensorflow-metal==0.6.0\n```\n\n## 6. Verify proper installation\n\n```{{bash}}\npython --version\nconda list|grep -E '(tensorflow|numpy)'\n```\n\n## 7. Test Tensorflow\n\nAfter completing the above steps, the following code should yield something like `[PhysicalDevice(name='/physical_device:CPU:0', device_type='CPU'), PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]`\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport tensorflow as tf\ntf.config.list_physical_devices()\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n[PhysicalDevice(name='/physical_device:CPU:0', device_type='CPU'),\n PhysicalDevice(name='/physical_device:GPU:0', device_type='GPU')]\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}